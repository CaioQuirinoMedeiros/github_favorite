{"version":3,"sources":["styles/global.js","store/ducks/favorites.js","store/ducks/index.js","services/api.js","store/sagas/favorites.js","store/sagas/index.js","store/index.js","pages/Main/styles.js","pages/Main/index.js","pages/Favorites/styles.js","pages/Favorites/index.js","components/Header/styles.js","components/Header/index.js","routes/index.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","_templateObject","Types","ADD_REQUEST","ADD_SUCCESS","ATT_SUCCESS","REMOVE","INITIAL_STATE","data","JSON","parse","localStorage","getItem","Creators","addFavoriteRequest","repository","refreshing","type","payload","addFavoriteSuccess","attFavoriteSuccess","removeFavorite","id","combineReducers","favorites","newFavorites","state","arguments","length","undefined","action","saveToStorage","setItem","stringify","Object","toConsumableArray","concat","objectSpread","filter","repo","newRepo","map","api","axios","create","baseURL","addFavorite","_ref","_ref2","repoData","regenerator_default","a","wrap","_context","prev","next","call","get","sent","img","owner","avatar_url","login","name","description","stars","stargazers_count","forks","forks_count","issues","open_issues","url","html_url","full_name","lastCommit","moment","pushed_at","fromNow","put","FavoriteActions","t0","abrupt","t1","console","log","stop","_marked","rootSaga","all","takeLatest","FavoriteTypes","sagas_marked","sagaMiddleware","createSagaMiddleware","sagaMonitor","middlewares","composer","applyMiddleware","apply","store","createStore","reducers","run","sagas","Container","styled","div","styles_templateObject","Form","form","_templateObject2","props","error","Pagination","_templateObject3","Lista","ul","_templateObject4","Button","button","attrs","_templateObject5","Main","user","loading","pages","componentDidMount","_callee","_this","setState","handleSearchRepository","handleInputChange","e","target","value","getPages","response","headers","link","pagesArr","split","page","defineProperty","slice","forEach","handleSubmit","preventDefault","_callee2","_args2","_context2","removeItem","finish","handleStarClick","_this$props","includes","_this2","this","_this$state","react_default","createElement","onSubmit","className","placeholder","onChange","first","onClick","last","key","href","rel","style","color","Component","connect","favorite","dispatch","bindActionCreators","Favorites_styles_templateObject","Repository","styles_templateObject2","ButtonsWrapper","styles_templateObject3","styles_templateObject4","Header","styles_templateObject5","Infos","_templateObject6","Info","li","_templateObject7","favoriteActions","styles_Container","styles_Button","styles_Header","src","alt","Header_styles_templateObject","Link","NavLink","exact","Header_styles_templateObject2","count","Header_styles_Container","to","Routes","react_router_dom","components_Header","react_router","path","component","Favorites","App","es","global","routes","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5e1c3eb6.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nimport 'font-awesome/css/font-awesome.css';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    outline: none;\n  }\n\n  body, html {\n    background-color: #273a47;\n    height: 100vh;\n    text-rendering: optimizeLegibility !important;\n    -webkit-font-smoothing: antialiased !important;\n    font-family: Arial, Helvetica, sans-serif;\n\n\n  }\n\n  #root {\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n  }\n\n  .none {\n    display: none;\n  }\n\n  button {\n    outline: none;\n    border: none;\n    background: none;\n\n    &:hover {\n      cursor: pointer;\n    }\n  }\n\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n`;\n\nexport default GlobalStyle;\n","/**\n * Types\n */\nexport const Types = {\n  ADD_REQUEST: 'favorites/ADD_REQUEST',\n  ADD_SUCCESS: 'favorites/ADD_SUCCESS',\n  ATT_SUCCESS: 'favorites/ATT_SUCCESS',\n  REMOVE: 'favorites/REMOVE',\n};\n\n/**\n * Reducer\n */\nconst INITIAL_STATE = {\n  data: JSON.parse(localStorage.getItem('@github_favorite:favorites')) || [],\n};\n\nexport default function favorites(state = INITIAL_STATE, action) {\n  let newFavorites;\n  const saveToStorage = data => localStorage.setItem('@github_favorite:favorites', JSON.stringify([...data]));\n\n  switch (action.type) {\n    case Types.ADD_SUCCESS:\n      newFavorites = [...state.data, action.payload.repository];\n\n      saveToStorage(newFavorites);\n\n      return {\n        ...state,\n        data: [...newFavorites],\n      };\n\n    case Types.REMOVE:\n      newFavorites = state.data.filter(repo => repo.id !== action.payload.id);\n\n      saveToStorage(newFavorites);\n\n      return { ...state, data: [...newFavorites] };\n    case Types.ATT_SUCCESS:\n      const newRepo = action.payload.repository;\n\n      newFavorites = state.data.map(repo => (repo.id === newRepo.id ? newRepo : repo));\n\n      saveToStorage(newFavorites);\n\n      return { ...state, data: [...newFavorites] };\n    default:\n      return state;\n  }\n}\n\n/**\n * Actions\n */\n\nexport const Creators = {\n  addFavoriteRequest: (repository, refreshing) => ({\n    type: Types.ADD_REQUEST,\n    payload: { repository, refreshing },\n  }),\n\n  addFavoriteSuccess: repository => ({\n    type: Types.ADD_SUCCESS,\n    payload: { repository },\n  }),\n\n  attFavoriteSuccess: repository => ({\n    type: Types.ATT_SUCCESS,\n    payload: { repository },\n  }),\n\n  removeFavorite: id => ({\n    type: Types.REMOVE,\n    payload: { id },\n  }),\n};\n","import { combineReducers } from 'redux';\n\nimport favorites from './favorites';\n\nexport default combineReducers({\n  favorites,\n});\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com',\n});\n\nexport default api;\n","import { call, put /* , select */ } from 'redux-saga/effects';\nimport moment from 'moment';\nimport api from '../../services/api';\n\nimport { Creators as FavoriteActions } from '../ducks/favorites';\n\nexport function* addFavorite({ payload }) {\n  try {\n    const { data } = yield call(api.get, `repos/${payload.repository}`);\n\n    const repoData = {\n      img: data.owner.avatar_url,\n      id: data.id,\n      owner: data.owner.login,\n      name: data.name,\n      description: data.description,\n      stars: data.stargazers_count,\n      forks: data.forks_count,\n      issues: data.open_issues,\n      url: data.html_url,\n      full_name: data.full_name,\n      lastCommit: moment(data.pushed_at).fromNow(),\n    };\n\n    return payload.refreshing\n      ? yield put(FavoriteActions.attFavoriteSuccess(repoData))\n      : yield put(FavoriteActions.addFavoriteSuccess(repoData));\n  } catch (err) {\n    console.log(err);\n  }\n}\n","import { all, takeLatest } from 'redux-saga/effects';\n\nimport { Types as FavoriteTypes } from '../ducks/favorites';\n\nimport { addFavorite } from './favorites';\n\nexport default function* rootSaga() {\n  yield all([takeLatest(FavoriteTypes.ADD_REQUEST, addFavorite)]);\n}\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducers from './ducks';\nimport sagas from './sagas';\n\nconst sagaMonitor = process.env.NODE_ENV === 'development' ? console.tron.createSagaMonitor() : null;\nconst sagaMiddleware = createSagaMiddleware({ sagaMonitor });\nconst middlewares = [sagaMiddleware];\n\nconst composer = process.env.NODE_ENV === 'development'\n  ? compose(\n    applyMiddleware(...middlewares),\n    console.tron.createEnhancer(),\n  )\n  : applyMiddleware(...middlewares);\n\nconst store = createStore(reducers, composer);\n\nsagaMiddleware.run(sagas);\n\nexport default store;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  padding: 15px 60px;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: #273a47;\n`;\n\nexport const Form = styled.form`\n  width: 70%;\n  min-width: 500px;\n  display: flex;\n  flex-direction: column;\n\n  .wrapper-row {\n    width: 100%;\n    display: flex;\n  }\n\n  input {\n    font-family: inherit;\n    flex: 1;\n    height: 55px;\n    padding: 0 20px;\n    background: #fff;\n    border: 2px solid transparent;\n    margin: 10px;\n    font-size: 18px;\n    color: #333;\n    border-radius: 3px;\n\n    border: ${props => (props.error ? '2px solid #f00' : 'none')};\n  }\n\n  button {\n    width: 100px;\n    height: 55px;\n    padding: 0 15px;\n    margin: 10px;\n    background: #52d89f;\n    color: #fff;\n    border: none;\n    font-size: 20px;\n    border-radius: 3px;\n    cursor: pointer;\n    transition: background 0.3s;\n\n    &:hover {\n      background: #40c68c;\n    }\n  }\n\n  span {\n    margin: 5px 10px;\n    color: #f00;\n    font-weight: 500;\n  }\n`;\n\nexport const Pagination = styled.div`\n  width: 70%;\n  min-width: 500px;\n  height: 60px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  div {\n    display: flex;\n  }\n\n  button {\n    margin: 5px 10px;\n    height: 35px;\n    border-radius: 50%;\n    outline: none;\n    border: none;\n    background: none;\n    font-size: 130%;\n    font-weight: bold;\n    color: #63f5b0;\n    cursor: pointer;\n  }\n`;\n\nexport const Lista = styled.ul`\n  width: 70%;\n  min-width: 500px;\n  display: flex;\n  flex-direction: column;\n  color: #222;\n  flex: 1;\n  overflow-y: auto;\n  overflow-x: hidden;\n\n  &::-webkit-scrollbar {\n    width: 10px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: #fff;\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: #40c68c;\n    outline: 1px solid slategrey;\n  }\n\n  li {\n    padding: 15px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    border-radius: 3px;\n    margin: 5px 10px;\n    background: #f7f7f7;\n\n    & .wrapper-row {\n      display: flex;\n      flex-direction: row;\n      margin-left: 15px;\n    }\n\n    & a {\n      font-weight: bold;\n      transition: all 0.2s;\n\n      &:hover {\n        opacity: 0.7;\n      }\n    }\n\n    & button {\n      margin-left: 20px;\n      color: #222;\n      font-size: 100%;\n      transition: opacity 0.2s;\n\n      &:hover {\n        opacity: 0.7;\n      }\n    }\n  }\n`;\n\nexport const Button = styled.button.attrs({\n  type: 'button',\n})``;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport api from '../../services/api';\n\nimport {\n  Form, Container, Lista, Pagination, Button,\n} from './styles';\n\nimport { Creators as FavoriteActions } from '../../store/ducks/favorites';\n\nclass Main extends Component {\n  static propTypes = {\n    addFavoriteRequest: PropTypes.func.isRequired,\n    removeFavorite: PropTypes.func.isRequired,\n    favorites: PropTypes.arrayOf(PropTypes.number).isRequired,\n  };\n\n  state = {\n    user: '',\n    data: [],\n    loading: false,\n    error: '',\n    pages: {},\n  };\n\n  componentDidMount = async () => {\n    const user = JSON.parse(localStorage.getItem('@github_favorite:user'));\n\n    if (user) {\n      this.setState({ user }, () => this.handleSearchRepository());\n    }\n  };\n\n  handleInputChange = (e) => {\n    this.setState({ user: e.target.value, error: '' });\n  };\n\n  getPages = (response) => {\n    if (!response.headers.link) {\n      this.setState({ pages: {} });\n      return;\n    }\n\n    const pagesArr = response.headers.link.split(', ').map(page => ({\n      [page.split('; ')[1].split('\"')[1]]: page.split('; ')[0].slice(-2, -1),\n    }));\n\n    let pages = {};\n\n    pagesArr.forEach((page) => {\n      pages = { ...pages, ...page };\n    });\n\n    this.setState({ pages });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.handleSearchRepository();\n  };\n\n  handleSearchRepository = async (page = 1) => {\n    const { user } = this.state;\n\n    try {\n      this.setState({ loading: true });\n\n      const response = await api.get(`users/${user}/repos?page=${page}`);\n\n      this.getPages(response);\n\n      const data = response.data.map(repo => ({\n        full_name: repo.full_name,\n        id: repo.id,\n        name: repo.name,\n        url: repo.html_url,\n      }));\n\n      this.setState({\n        data: [...data],\n        error: '',\n      });\n\n      localStorage.setItem('@github_favorite:user', JSON.stringify(user));\n    } catch (err) {\n      console.log(err);\n\n      localStorage.removeItem('@github_favorite:user');\n\n      this.setState({\n        data: [],\n        pages: {},\n        error: 'Ops! Não foi possível buscar os repositórios deste usuário',\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  handleStarClick = (repo) => {\n    const { favorites, removeFavorite, addFavoriteRequest } = this.props;\n\n    return favorites.includes(repo.id)\n      ? removeFavorite(repo.id)\n      : addFavoriteRequest(repo.full_name, false);\n  };\n\n  render() {\n    const {\n      user, data, loading, error, pages,\n    } = this.state;\n    const { favorites } = this.props;\n\n    return (\n      <Container>\n        <Form onSubmit={this.handleSubmit} error={!!error}>\n          <div className=\"wrapper-row\">\n            <input placeholder=\"user\" value={user} onChange={this.handleInputChange} />\n            <button type=\"submit\">\n              {loading ? <i className=\"fa fa-spinner fa-pulse\" /> : 'Search'}\n            </button>\n          </div>\n\n          {!!error && <span>{error}</span>}\n        </Form>\n\n        <Pagination>\n          <div>\n            {pages.first && (\n              <Button onClick={() => this.handleSearchRepository(pages.first)}>\n                <i className=\"fa fa-angle-double-left\" />\n              </Button>\n            )}\n            {pages.prev && (\n              <Button onClick={() => this.handleSearchRepository(pages.prev)}>\n                <i className=\"fa fa-angle-left\" />\n              </Button>\n            )}\n          </div>\n          <div>\n            {pages.next && (\n              <Button onClick={() => this.handleSearchRepository(pages.next)}>\n                <i className=\"fa fa-angle-right\" />\n              </Button>\n            )}\n            {pages.last && (\n              <Button onClick={() => this.handleSearchRepository(pages.last)}>\n                <i className=\"fa fa-angle-double-right\" />\n              </Button>\n            )}\n          </div>\n        </Pagination>\n\n        <Lista>\n          {data.map(repo => (\n            <li key={repo.id}>\n              <a href={repo.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                {repo.name}\n              </a>\n\n              <button type=\"button\" onClick={() => this.handleStarClick(repo)}>\n                <i\n                  className=\"fa fa-star\"\n                  style={favorites.includes(repo.id) ? { color: 'gold' } : {}}\n                />\n              </button>\n            </li>\n          ))}\n        </Lista>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  favorites: state.favorites.data.map(favorite => favorite.id),\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators(FavoriteActions, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Main);\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  padding: 15px 60px;\n  flex: 1;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  overflow-y: scroll;\n\n  &::-webkit-scrollbar {\n    width: 10px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: #fff;\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: #40c68c;\n    outline: 1px solid slategrey;\n  }\n`;\n\nexport const Repository = styled.div`\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  margin: 10px;\n  flex-shrink: 0;\n\n  background: #fff;\n  border-radius: 3px;\n  transition: all 0.15s;\n\n  &:hover {\n    transform: scale(1.01);\n  }\n`;\n\nexport const ButtonsWrapper = styled.div`\n  padding: 8px 10px 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Button = styled.button.attrs({ type: 'button' })`\n  i {\n    transition: color 0.2s;\n    font-size: 110%;\n\n    &:hover {\n      color: #40c68c;\n    }\n  }\n`;\n\nexport const Header = styled.a`\n  padding: 0 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: #1a2730;\n\n  img {\n    width: 60px;\n  }\n\n  strong {\n    font-size: 18px;\n    height: 46px;\n    width: 100%;\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    overflow: hidden;\n    margin: 10px 0;\n  }\n\n  small {\n    font-size: 14px;\n    color: #555;\n  }\n`;\n\nexport const Infos = styled.ul`\n  list-style: none;\n  padding: 20px 0 0;\n`;\n\nexport const Info = styled.li`\n  padding: 10px 20px;\n\n  &:nth-child(2n - 1) {\n    background: #f5f5f5;\n  }\n\n  span {\n    font-weight: bold;\n    margin-right: 5px;\n  }\n\n  small {\n    font-size: 12px;\n    color: #999;\n    font-style: italic;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport {\n  Container, Repository, ButtonsWrapper, Button, Header, Infos, Info,\n} from './styles';\n\nimport { Creators as favoriteActions } from '../../store/ducks/favorites';\n\nconst Favorites = ({ favorites, removeFavorite, addFavoriteRequest }) => (\n  <Container>\n    {favorites.map(repo => (\n      <Repository key={repo.id}>\n        <ButtonsWrapper>\n          <Button onClick={() => addFavoriteRequest(repo.full_name, true)}>\n            <i className=\"fa fa-undo\" />\n          </Button>\n          <Button onClick={() => removeFavorite(repo.id)}>\n            <i className=\"fa fa-close\" />\n          </Button>\n        </ButtonsWrapper>\n        <Header href={repo.url} target=\"_blank\">\n          <img src={repo.img} alt={repo.owner} />\n          <strong>{repo.name}</strong>\n          <small>{repo.owner}</small>\n        </Header>\n        <Infos>\n          <Info>\n            <span>{repo.stars}</span>\n            <small>stars</small>\n          </Info>\n          <Info>\n            <span>{repo.forks}</span>\n            <small>forks</small>\n          </Info>\n          <Info>\n            <span>{repo.issues}</span>\n            <small>issues</small>\n          </Info>\n          <Info>\n            <span>{repo.lastCommit}</span>\n            <small>last commit</small>\n          </Info>\n        </Infos>\n      </Repository>\n    ))}\n  </Container>\n);\n\nFavorites.propTypes = {\n  favorites: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      img: PropTypes.string,\n      name: PropTypes.string,\n      owner: PropTypes.string,\n      description: PropTypes.string,\n      stars: PropTypes.number,\n      forks: PropTypes.forks,\n      issues: PropTypes.issues,\n      lastCommit: PropTypes.string,\n    }),\n  ).isRequired,\n  removeFavorite: PropTypes.func.isRequired,\n  addFavoriteRequest: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  favorites: state.favorites.data,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators(favoriteActions, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Favorites);\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  background: #1a2730;\n\n  h1 {\n    color: #f5f5f5;\n    margin: 0 10px;\n    text-align: center;\n    font-size: 250%;\n    flex: 5;\n  }\n`;\n\nexport const Link = styled(NavLink).attrs({\n  exact: true,\n})`\n  color: #63f5b0;\n  font-size: 120%;\n  opacity: 0.7;\n  transition: all 0.2s;\n\n  &:hover {\n    opacity: 1;\n  }\n\n  &.active {\n    opacity: 1;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { Creators as FavoriteActions } from '../../store/ducks/favorites';\n\nimport { Container, Link } from './styles';\n\nconst Header = ({ count }) => (\n  <Container>\n    <Link to=\"/\">Search</Link>\n    <h1>GitHub Favorite</h1>\n    <Link to=\"/favorites\">{`Favorites (${count})`}</Link>\n  </Container>\n);\n\nHeader.propTypes = {\n  count: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  count: state.favorites.data.length,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators(FavoriteActions, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Header);\n","import React from 'react';\nimport {\n  BrowserRouter, Switch, Route, Redirect,\n} from 'react-router-dom';\n\nimport Main from '../pages/Main';\nimport Favorites from '../pages/Favorites';\nimport Header from '../components/Header';\n\nconst Routes = () => (\n  <BrowserRouter>\n    <Header />\n    <Switch>\n      <Route exact path=\"/\" component={Main} />\n      <Route path=\"/favorites\" component={Favorites} />\n      <Redirect to=\"/\" />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport GlobalStyle from \"./styles/global\";\r\n\r\nimport './config/ReactotronConfig';\r\nimport store from './store';\r\n\r\nimport Routes from './routes';\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <GlobalStyle />\r\n    <Routes />\r\n  </Provider>\r\n)\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}